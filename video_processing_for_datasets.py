# -*- coding: utf-8 -*-
"""Video_Processing_For_Datasets.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nIL2OJZBb4t2z9eXCc1jkeikADV_6nUh
"""

from google.colab import drive
drive.mount('/content/drive')

import os
import cv2
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Capture images from video files
# This code capturing images at average every second

dir = "/content/drive/MyDrive/SEPIMEP/kaggle-videolar/videos"
images_dir = "/content/drive/MyDrive/SEPIMEP/kaggle-videolar/images"


video_num = 1
counter = 0
step = 30 # Capture counter 
image_count = 0

for video in os.listdir(dir):
  path = os.path.join(dir,video)
  video = cv2.VideoCapture(path)
  print(video)
  while video.isOpened():
    rec, frame = video.read()
    if (rec == True) and (counter % step == 0 ):
      cv2.imwrite(os.path.join(images_dir, str(video_num) + "_drone_" + str(counter) + ".jpg"), frame)
      image_count += 1  
      print("Saved " + str(image_count) + ".image") 
      counter += 1 
    elif counter % step != 0:
      counter += 1 
      continue
    else:
      break
    
    
  video_num += 1
  counter = 0
  image_count = 0

# Cropping all images
# First, you must check your cropping area, after that you can cropping your images with code in the comment line at the end.

check_one = 0

for image_name in os.listdir(images_dir):
  path = os.path.join(images_dir, image_name)
  
  if check_one == 0:
    image = cv2.imread(path)

    # check cropping area 
    plt.imshow(image)
    check_one = 1


    # The image to be saved after cropping is assigned to the variable image_cropper
    # image_cropped = image[ 100: 500, 100:500] # y:y_width + y , x:x+ x_width
    # plt.imshow(image_cropped)
    # cv2.imwrite(os.path.join(images_dir, "cropped_" + image_name ), image_cropped )









